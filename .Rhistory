cheatgrass_plot <- lmer(asin(sqrt(Cheatgrass/100)) ~ scale(Tree_cover) + scale(Delta_pdc)*scale(cwd_normal_cum) +
scale(AWC) + (1|Cluster), data = plot_data)
plot(allEffects(cheatgrass_plot, partial.residuals = TRUE))
tiff(filename="./outputs/Figure_5_understory_effects.tiff",
type="cairo",
units="in",
width = 7,
height=5,
pointsize=15,
compression = "lzw",
res=600)
layout(matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3, byrow = TRUE))
par(oma = c(2,4,0,0), mar = c(3,1,1,1), bty = 'n')
plot(NA,
ylim = c(0,.12),
xlim = c(I(min(plot_data$Tree_cover)*100), I(max(plot_data$Tree_cover)*100)),
xlab = "",
ylab = "",
bg='grey60',
col = 'grey30',
pch = 21,
cex.lab = 1.5,
bty = 'n',
xaxt = 'n',
yaxt = 'n')
lines(inv.as(preds_tc_cg$predictions) ~ I(preds_tc_cg$predictor*100), lwd = 2, lty = 2, col = "#1b9e77")
points(I(preds_tc_cg$predictor[c(1,200)]*100), inv.as(preds_tc_cg$predictions[c(1,200)]), pch = 21, col = "#1b9e77", bg = "#1b9e77")
lines(inv.as(preds_tc_pg$predictions) ~ I(preds_tc_cg$predictor*100), lwd = 2, lty = 2, col = "#000000")
points(I(preds_tc_cg$predictor[c(1,200)]*100), inv.as(preds_tc_pg$predictions[c(1,200)]), pch = 22, col = "#000000", bg = "#000000")
lines(inv.as(preds_tc_pf$predictions) ~ I(preds_tc_cg$predictor*100), lwd = 2, lty = 1, col = "#E69F00")
points(I(preds_tc_cg$predictor[c(1,200)]*100), inv.as(preds_tc_pf$predictions[c(1,200)]), pch = 23, col = "#E69F00", bg = "#E69F00")
lines(inv.as(preds_tc_sh$predictions) ~ I(preds_tc_cg$predictor*100), lwd = 2, lty = 1, col = "#56B4E9")
points(I(preds_tc_cg$predictor[c(1,200)]*100), inv.as(preds_tc_sh$predictions[c(1,200)]), pch = 24, col = "#56B4E9", bg = "#56B4E9")
axis(side = 1)
axis(side = 2, at = axTicks(2), labels = axTicks(2)*100)
mtext(text = "Tree cover (%)", side = 1, line = 2.2)
mtext(text = "Understory cover (%)", side = 2, outer = TRUE, line = 2, cex = 1)
mtext(text = "(a)", side = 1, line = -10, adj = 0.05)
plot(NA,
ylim = c(0,.1),
xlim = c(min(plot_data$AWC), max(plot_data$AWC)),
xlab = "",
ylab = "",
bg='grey60',
col = 'grey30',
pch = 21,
cex.lab = 1.5,
bty = 'n',
xaxt = 'n',
yaxt = 'n')
lines(inv.as(preds_awc_cg$predictions) ~ I(preds_awc_cg$predictor), lwd = 2, lty = 1, col = "#1b9e77")
points(I(preds_awc_cg$predictor[c(1,200)]), inv.as(preds_awc_cg$predictions[c(1,200)]), pch = 21, col = "#1b9e77", bg = "#1b9e77")
lines(inv.as(preds_awc_pg$predictions) ~ I(preds_awc_cg$predictor), lwd = 2, lty = 2, col = "#000000")
points(I(preds_awc_cg$predictor[c(1,200)]), inv.as(preds_awc_pg$predictions[c(1,200)]), pch = 22, col = "#000000", bg = "#000000")
lines(inv.as(preds_awc_pf$predictions) ~ I(preds_awc_cg$predictor), lwd = 2, lty = 2, col = "#E69F00")
points(I(preds_awc_cg$predictor[c(1,200)]), inv.as(preds_awc_pf$predictions[c(1,200)]), pch = 23, col = "#E69F00", bg = "#E69F00")
lines(inv.as(preds_awc_sh$predictions) ~ I(preds_awc_cg$predictor), lwd = 2, lty = 2, col = "#56B4E9")
points(I(preds_awc_cg$predictor[c(1,200)]), inv.as(preds_awc_sh$predictions[c(1,200)]), pch = 24, col = "#56B4E9", bg = "#56B4E9")
axis(side = 1)
axis(side = 2, at = axTicks(2), labels = axTicks(2)*100)
mtext(text = "Soil AWC (%)", side = 1, line = 2.2)
mtext(text = "(b)", side = 1, line = -10, adj = 0.05)
plot.new()
legend("topright", legend = c("Cheatgrass", "Per. Grass", "Per. Forb", "Shrub"),
lty = 1, pch = c(21,22,23,24), lwd = 2, cex = 1.3, col = c("#1b9e77", "#000000", "#E69F00", "#56B4E9"),
pt.bg = c("#1b9e77", "#000000", "#E69F00", "#56B4E9"))
plot(NA,
ylim = c(0,.25),
xlim = c(min(plot_data$Delta_pdc), max(plot_data$Delta_pdc)),
xlab = "",
ylab = "",
bg='grey60',
col = 'grey30',
pch = 21,
cex.lab = 1.5,
bty = 'n',
xaxt = 'n',
yaxt = 'n')
lines(inv.as(preds_pdc_10_cg$predictions) ~ I(preds_pdc_10_cg$predictor), lwd = 2, lty = 1, col = "#1b9e77")
points(I(preds_pdc_10_cg$predictor[c(1,200)]), inv.as(preds_pdc_10_cg$predictions[c(1,200)]), pch = 21, col = "#1b9e77", bg = "#1b9e77")
lines(inv.as(preds_pdc_10_pg$predictions) ~ I(preds_pdc_10_cg$predictor), lwd = 2, lty = 1, col = "#000000")
points(I(preds_pdc_10_cg$predictor[c(1,200)]), inv.as(preds_pdc_10_pg$predictions[c(1,200)]), pch = 22, col = "#000000", bg = "#000000")
lines(inv.as(preds_pdc_10_pf$predictions) ~ I(preds_pdc_10_cg$predictor), lwd = 2, lty = 2, col = "#E69F00")
points(I(preds_pdc_10_cg$predictor[c(1,200)]), inv.as(preds_pdc_10_pf$predictions[c(1,200)]), pch = 23, col = "#E69F00", bg = "#E69F00")
lines(inv.as(preds_pdc_10_sh$predictions) ~ I(preds_pdc_10_cg$predictor), lwd = 2, lty = 1, col = "#56B4E9")
points(I(preds_pdc_10_cg$predictor[c(1,200)]), inv.as(preds_pdc_10_sh$predictions[c(1,200)]), pch = 24, col = "#56B4E9", bg = "#56B4E9")
axis(side = 1)
axis(side = 2, at = axTicks(2), labels = axTicks(2)*100)
text(x = -30, y = .18, labels = "10% CWD", cex = 1.3)
mtext(text = "(c)", side = 1, line = -10, adj = 0.05)
plot(NA,
ylim = c(0,.25),
xlim = c(min(plot_data$Delta_pdc), max(plot_data$Delta_pdc)),
xlab = "",
ylab = "",
bg='grey60',
col = 'grey30',
pch = 21,
cex.lab = 1.5,
bty = 'n',
xaxt = 'n',
yaxt = 'n')
lines(inv.as(preds_pdc_50_cg$predictions) ~ I(preds_pdc_90_cg$predictor), lwd = 2, lty = 1, col = "#1b9e77")
points(I(preds_pdc_90_cg$predictor[c(1,200)]), inv.as(preds_pdc_50_cg$predictions[c(1,200)]), pch = 21, col = "#1b9e77", bg = "#1b9e77")
lines(inv.as(preds_pdc_50_pg$predictions) ~ I(preds_pdc_90_cg$predictor), lwd = 2, lty = 1, col = "#000000")
points(I(preds_pdc_50_cg$predictor[c(1,200)]), inv.as(preds_pdc_50_pg$predictions[c(1,200)]), pch = 22, col = "#000000", bg = "#000000")
lines(inv.as(preds_pdc_50_pf$predictions) ~ I(preds_pdc_90_cg$predictor), lwd = 2, lty = 2, col = "#E69F00")
points(I(preds_pdc_50_cg$predictor[c(1,200)]), inv.as(preds_pdc_50_pf$predictions[c(1,200)]), pch = 23, col = "#E69F00", bg = "#E69F00")
lines(inv.as(preds_pdc_50_sh$predictions) ~ I(preds_pdc_90_cg$predictor), lwd = 2, lty = 1, col = "#56B4E9")
points(I(preds_pdc_50_cg$predictor[c(1,200)]), inv.as(preds_pdc_50_sh$predictions[c(1,200)]), pch = 24, col = "#56B4E9", bg = "#56B4E9")
axis(side = 1)
axis(side = 2, at = axTicks(2), labels = axTicks(2)*100)
text(x = -30, y = .18, labels = "50% CWD", cex = 1.3)
mtext(text = "Mean change in live canopy (%)", side = 1, line = 2.2)
mtext(text = "(d)", side = 1, line = -10, adj = 0.05)
plot(NA,
ylim = c(0,.25),
xlim = c(min(plot_data$Delta_pdc), max(plot_data$Delta_pdc)),
xlab = "",
ylab = "",
bg='grey60',
col = 'grey30',
pch = 21,
cex.lab = 1.5,
bty = 'n',
xaxt = 'n',
yaxt = 'n')
lines(inv.as(preds_pdc_90_cg$predictions) ~ I(preds_pdc_90_cg$predictor), lwd = 2, lty = 1, col = "#1b9e77")
points(I(preds_pdc_90_cg$predictor[c(1,200)]), inv.as(preds_pdc_90_cg$predictions[c(1,200)]), pch = 21, col = "#1b9e77", bg = "#1b9e77")
lines(inv.as(preds_pdc_90_pg$predictions) ~ I(preds_pdc_90_cg$predictor), lwd = 2, lty = 1, col = "#000000")
points(I(preds_pdc_90_cg$predictor[c(1,200)]), inv.as(preds_pdc_90_pg$predictions[c(1,200)]), pch = 22, col = "#000000", bg = "#000000")
lines(inv.as(preds_pdc_90_pf$predictions) ~ I(preds_pdc_90_cg$predictor), lwd = 2, lty = 2, col = "#E69F00")
points(I(preds_pdc_90_cg$predictor[c(1,200)]), inv.as(preds_pdc_90_pf$predictions[c(1,200)]), pch = 23, col = "#E69F00", bg = "#E69F00")
lines(inv.as(preds_pdc_90_sh$predictions) ~ I(preds_pdc_90_cg$predictor), lwd = 2, lty = 1, col = "#56B4E9")
points(I(preds_pdc_90_cg$predictor[c(1,200)]), inv.as(preds_pdc_90_sh$predictions[c(1,200)]), pch = 24, col = "#56B4E9", bg = "#56B4E9")
axis(side = 1)
axis(side = 2, at = axTicks(2), labels = axTicks(2)*100)
text(x = -30, y = .18, labels = "90% CWD", cex = 1.3)
mtext(text = "(e)", side = 1, line = -10, adj = 0.05)
dev.off()
cheatgrass_plot <- lmer(asin(sqrt(Cheatgrass/100)) ~ scale(Tree_cover) + scale(Delta_pdc)*scale(cwd_normal_cum) +
scale(AWC) + (1|Cluster), data = plot_data)
summary(cheatgrass_plot, ddf = "Kenward-Roger")
cheatgrass_plot <- lmer(asin(sqrt(Cheatgrass/100)) ~ scale(Tree_cover) + scale(Delta_pdc)+scale(cwd_normal_cum) +
scale(AWC) + (1|Cluster), data = plot_data)
summary(cheatgrass_plot, ddf = "Kenward-Roger")
plot(allEffects(cheatgrass_plot, partial.residuals = TRUE))
#-------------------------------------------------------------------------------
# Thornthwaite water balance
#-------------------------------------------------------------------------------
library(ClimClass)
library(scPDSI)
library("purrr")
clim_month <- read.csv("./clean data/climate_data_monthly.csv")
clim_normals <- clim_month[between(clim_month$year, 1980, 2010), ] %>%
stats::aggregate(by = list(.$site), FUN = mean)
>between
??between
between(clim_month$year, 1980, 2010)
library(raster)
library(rgdal)
library(foreign)
library(plyr)
clim_month <- read.csv("./clean data/climate_data_monthly.csv")
clim_normals <- clim_month[between(clim_month$year, 1980, 2010), ] %>%
stats::aggregate(by = list(.$site), FUN = mean)
#-------------------------------------------------------------------------------
# Thornthwaite water balance
#-------------------------------------------------------------------------------
library("ClimClass")
library("scPDSI")
library("dplyr")
library("purrr")
clim_month <- read.csv("./clean data/climate_data_monthly.csv")
clim_normals <- clim_month[between(clim_month$year, 1980, 2010), ] %>%
stats::aggregate(by = list(.$site), FUN = mean)
test
clim_month <- read.csv("./clean data/climate_data_monthly.csv")
clim_normals <- clim_month[between(clim_month$year, 1980, 2010), ] %>%
stats::aggregate(by = list(.$site), FUN = mean)
test <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
magrittr::extract2(. , 1)
test
as.data.frame(sites@coords)
sites@coords[["YCoord"]]
plot_centers$YCoord[1]
as.data.frame(sites@coords)$YCoord
latitudes <- as.data.frame(sites@coords)$YCoord
thornthwaite(test, latitudes[1])
test <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
magrittr::extract2(. , 1)
test_out <- thornthwaite(test, latitudes[1])
str(test_our)
str(test_out)
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map(., latitudes, thornthwaite(.))
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site)
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map(., summarise())
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map(., summary())
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map(summary())
?map
?map2
map
map_impl
as_mapper
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, thornthwaite(.x, .y))
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, thornthwaite())
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, thornthwaite(series = .x, latitude = .y))
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, thornthwaite(series = .))
test <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
magrittr::extract2(. , 1)
test_out <- thornthwaite(test)
clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, ~thornthwaite(.x, .y))
clim_month <- clim_month[1:10000, ]
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, ~thornthwaite(.x, .y))
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, ~thornthwaite(.x, .y))
?thornthwaite
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, ~thornthwaite(.x, .y))
clim_month <- read.csv("./clean data/climate_data_monthly.csv")
latitudes <- as.data.frame(sites@coords)$YCoord
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, ~thornthwaite(.x, .y))
View(output)
output
library("ClimClass")
library("scPDSI")
library("dplyr")
library("purrr")
clim_month <- read.csv("./clean data/climate_data_monthly.csv")
clim_normals <- clim_month[between(clim_month$year, 1980, 2010), ] %>%
stats::aggregate(by = list(.$site), FUN = mean)
latitudes <- as.data.frame(sites@coords)$YCoord
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::map2(., latitudes, ~thornthwaite(.x, .y))
nrow(clim_month)
install.packages("tidyverse")
str(output)
min(clim_month$tmean)
max(clim_month$tmean)
max(clim_month[clim_month$month == 1, ]$tmean)
min(clim_month[clim_month$month == 1, ]$tmean)
min(clim_month[clim_month$month == 3, ]$tmean)
min(clim_month[clim_month$month == 4, ]$tmean)
min(clim_month[clim_month$month == 5, ]$tmean)
grep("awc", names(soil2))
#soil triangle
soil <- read.csv("./Raw data/soils_missing_imputed_with_new_ptf_2020-12-7.csv", skip = 1)
names(soil)[12:14] <- c("SAND", "SILT", "CLAY")
TT.plot(class.sys = "USDA.TT",
tri.data = soil,
tri.sum.tst = FALSE
)
#calculate field capacity and pwp for different models
brookscorey <- function(qr, f, hb, lambda, h){
if(h <= hb){return(1)}else{
return((hb/h)^lambda)
}
}
vangenuchten <- function(qr, qs, a, n, m, h){
return(1/((1 + (a * h)^n)^m))
}
soil2 <- soil
soil2$awc <- (soil2$Field_cap - soil2$Perm_wilt)/100
soil2$awc1 <- soil2$X330 - soil2$X15000
soil2$awc2 <- soil2$X330.1 - soil2$X15000.1
soil2$awc3 <- soil2$X330.2 - soil2$X15000.2
soil2$awc4 <- soil2$X330.3 - soil2$X15000.3
#import results from CalcPTF
ptf_params <- read.csv("./Raw data/CalcPTF understory 2020-12-08.csv", skip = 1,
stringsAsFactors = FALSE)
ptf_params[, c(10:98)] <- apply(ptf_params[, c(10:98)], 2, FUN = as.numeric)
for(i in 1:102){
#saxton
soil2$awc5[i] <- brookscorey(ptf_params[i+1, 10], ptf_params[i+1, 11],
ptf_params[i+1, 12], ptf_params[i+1, 13],
330) -
brookscorey(ptf_params[i+1, 10], ptf_params[i+1, 11],
ptf_params[i+1, 12], ptf_params[i+1, 13],
15000)
soil2$X330.4[i] <- brookscorey(ptf_params[i+1, 10], ptf_params[i+1, 11],
ptf_params[i+1, 12], ptf_params[i+1, 13],
330)
#campbell shiosawa
soil2$awc6[i] <- brookscorey(ptf_params[i+1, 15], ptf_params[i+1, 16],
ptf_params[i+1, 17], ptf_params[i+1, 18],
330) -
brookscorey(ptf_params[i+1, 15], ptf_params[i+1, 16],
ptf_params[i+1, 17], ptf_params[i+1, 18],
15000)
soil2$x330.5[i] <- brookscorey(ptf_params[i+1, 15], ptf_params[i+1, 16],
ptf_params[i+1, 17], ptf_params[i+1, 18],
330)
#rawls brackensiek
soil2$awc7[i] <- brookscorey(ptf_params[i+1, 20], ptf_params[i+1, 21],
ptf_params[i+1, 22], ptf_params[i+1, 23],
330) -
brookscorey(ptf_params[i+1, 20], ptf_params[i+1, 21],
ptf_params[i+1, 22], ptf_params[i+1, 23],
15000)
soil2$x330.6[i] <- brookscorey(ptf_params[i+1, 20], ptf_params[i+1, 21],
ptf_params[i+1, 22], ptf_params[i+1, 23],
330)
#williams
soil2$awc8[i] <- brookscorey(ptf_params[i+1, 25], ptf_params[i+1, 26],
ptf_params[i+1, 27], ptf_params[i+1, 28],
330) -
brookscorey(ptf_params[i+1, 25], ptf_params[i+1, 26],
ptf_params[i+1, 27], ptf_params[i+1, 28],
15000)
soil2$x330.7[i] <- brookscorey(ptf_params[i+1, 25], ptf_params[i+1, 26],
ptf_params[i+1, 27], ptf_params[i+1, 28],
330)
#oosterveld_chang
soil2$awc9[i] <- brookscorey(ptf_params[i+1, 35], ptf_params[i+1, 36],
ptf_params[i+1, 37], ptf_params[i+1, 38],
330) -
brookscorey(ptf_params[i+1, 35], ptf_params[i+1, 36],
ptf_params[i+1, 37], ptf_params[i+1, 38],
15000)
soil2$x330.8[i] <- brookscorey(ptf_params[i+1, 35], ptf_params[i+1, 36],
ptf_params[i+1, 37], ptf_params[i+1, 38],
330)
#wosten_chang
soil2$awc10[i] <- vangenuchten(ptf_params[i+1, 45], ptf_params[i+1, 46],
ptf_params[i+1, 47], ptf_params[i+1, 48],
ptf_params[i+1, 49], 330) -
vangenuchten(ptf_params[i+1, 45], ptf_params[i+1, 46],
ptf_params[i+1, 47], ptf_params[i+1, 48],
ptf_params[i+1, 49], 15000)
soil2$x330.9[i] <- vangenuchten(ptf_params[i+1, 45], ptf_params[i+1, 46],
ptf_params[i+1, 47], ptf_params[i+1, 48],
ptf_params[i+1, 49], 330)
#varallyay
soil2$awc11[i] <- vangenuchten(ptf_params[i+1, 51], ptf_params[i+1, 52],
ptf_params[i+1, 53], ptf_params[i+1, 54],
ptf_params[i+1, 55], 330) -
vangenuchten(ptf_params[i+1, 51], ptf_params[i+1, 52],
ptf_params[i+1, 53], ptf_params[i+1, 54],
ptf_params[i+1, 55], 15000)
soil2$x330.10[i] <- vangenuchten(ptf_params[i+1, 51], ptf_params[i+1, 52],
ptf_params[i+1, 53], ptf_params[i+1, 54],
ptf_params[i+1, 55], 330)
}
grep("awc", names(soil2))
soil2[, grep("330", names(soil2))]
soil2$mean_fc <- apply(soil2[, grep("330", names(soil2))], 1, mean)
write.csv(soil2, "./Raw data/soil_new_awc.csv")
soil <- read.csv("./Raw data/soil_new_awc.csv")
?pmap
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::pmap(list(series = ., latitude = latitudes, TAW = soil$mean_fc),
thornthwaite())
?pmin
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
purrr::pmap(list(series = .x, latitude = latitudes, TAW = soil$mean_fc),
thornthwaite())
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
{purrr::pmap(list(series = ., latitude = latitudes, TAW = soil$mean_fc),
thornthwaite())}
soil$mean_fc
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
{purrr::pmap(list(series = ., latitude = latitudes, TAW = soil$mean_fc),
~thornthwaite())}
?pmap
output <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
{purrr::pmap(list(series = ., latitude = latitudes, TAW = soil$mean_fc),
~thornthwaite(series = ..1, latitude = ..2, TAW = ..3))}
?scPDSI
output[[1]]
str(output[[1]])
output[[1]]$W_balance$Precipitation
thornthwaite_vars <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
{purrr::pmap(list(series = ., latitude = latitudes, TAW = soil$mean_fc),
~thornthwaite(series = ..1, latitude = ..2, TAW = ..3))}
tt_vars <- clim_month %>%
dplyr::select(site, year, month, ppt, tmean) %>%
rename(P = ppt, Tm = tmean)%>%
split(.$site) %>%
{purrr::pmap(list(series = ., latitude = latitudes, TAW = soil$mean_fc),
~thornthwaite(series = ..1, latitude = ..2, TAW = ..3))}
tt_vars[[1]]$W_balance$Precipitation
tt_vars[[1]]$W_balance$Precipitation %>% bind_rows()
tt_vars$W_balance$Precipitation %>%
?climate
tt_vars$W_balance$Precipitation
names(tt_vars)
tt_vars[["RAV339"]]
site <- "RAV339"
tt_vars[[site]]$W_balance$Precipitation
test <-  tt_vars[[site]]$W_balance$Precipitation
str(test)
test <-  t(tt_vars[[site]]$W_balance$Precipitation)
test
test <-  tt_vars[[site]]$W_balance$Precipitation %>%
t() %>%
pivot_longer()
?pivot_longer
library("tidyr")
test <-  tt_vars[[site]]$W_balance$Precipitation %>%
t() %>%
pivot_longer()
tt_vars[[site]]$W_balance$Precipitation %>%
t()
test <-  tt_vars[[site]]$W_balance$Precipitation %>%
t()
str(test)
test <-  tt_vars[[site]]$W_balance$Precipitation %>%
t() %>%
as.data.frame() %>%
pivot_longer()
test <-  tt_vars[[site]]$W_balance$Precipitation %>%
t() %>%
as.data.frame()
test
str(test)
rownames(data.frame)
library("tibble")
test <-  tt_vars[[site]]$W_balance$Precipitation %>%
tibble::rownames_to_column() %>%
pivot_longer()
test <-  tt_vars[[site]]$W_balance$Precipitation %>%
tibble::rownames_to_column()
test
tt_vars %>% pluck(., site, "W_balance", "Precipitation")
tt_vars %>% pluck(., site, "W_balance", c("Precipitation", "Et0"))
tt_vars %>%
split()
unnest(tt_vars)
unlist(tt_vars)
