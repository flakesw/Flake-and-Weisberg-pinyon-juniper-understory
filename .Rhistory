#
# segments(x0 = 2, x1 = 3, y0 = melt_elect[melt_elect$variable == "Live", "value"],
#          y1 = melt_elect[melt_elect$variable == "Inter", "value"])
if(i %in% c(1,2)){
axis(1, at = c(1,2,3), labels = FALSE)
}
if(i %in% c(3,4)){
axis(1, at = c(1,2,3), labels =  c("D-L", "D-I", "L-I"))
}
# text(x = c(1,2,3), y = 0.9, labels = pvals[4:6])
mtext(text = types[i], outer = FALSE, side = 3, line = 0.3)
mtext(text = paste0("(", letters[i], ")"), outer = FALSE, side = 3, at = 0.5, line = 0.3)
mtext(text = "Relative Interaction Index", outer = TRUE, side = 2, line = 1.5)
}
png(filename="./outputs/electivity.png",
type="cairo",
units="in",
width = 4,
height=4,
pointsize=10,
res=160)
par(mfrow = c(2,2),
mar = c(2,1,1,2),
oma = c(2,3,1,0))
for(i in 1:ntypes){
melt_elect <- melt(elect_results[[i]][, 2:4])
plot(NA,
ylim = c(-1,1),
xlim = c(.7, 3.3),
xaxt = "n")
pvals <- results_boots[[i]][2, ]
abline(h = 0)
vioplot(elect_means[[i]][[2]], add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[3]], at = 2, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[4]], at = 3, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
points(melt_elect$value ~ I(as.numeric(melt_elect$variable)+ runif(nrow(melt_elect), -.1, .1 )),
pch = 21,
bg = "grey")
means <- aggregate(melt_elect$value, by = list(melt_elect$variable), FUN = function(x){mean(x, na.rm = TRUE)})
segments(x0 = c(0.9, 1.9, 2.9), y0 = means$x, x1 = c(1.1, 2.1, 3.1), lwd = 3)
# segments(x0 = 1, x1 = 2, y0 = melt_elect[melt_elect$variable == "Dead", "value"],
#          y1 = melt_elect[melt_elect$variable == "Live", "value"])
#
# segments(x0 = 2, x1 = 3, y0 = melt_elect[melt_elect$variable == "Live", "value"],
#          y1 = melt_elect[melt_elect$variable == "Inter", "value"])
if(i %in% c(1,2)){
axis(1, at = c(1,2,3), labels = FALSE)
}
if(i %in% c(3,4)){
axis(1, at = c(1,2,3), labels =  c("Dead", "Live", "Inter"))
}
# text(x = c(1,2,3), y = 0.9, labels = pvals[4:6])
mtext(text = types[i], outer = FALSE, side = 3, line = 0.3)
mtext(text = paste0("(", letters[i], ")"), outer = FALSE, side = 3, at = 0.5, line = 0.3)
mtext(text = "Ivlev's E", outer = TRUE, side = 2, line = 1.5)
}
dev.off()
png(filename="./outputs/electivity_rii.png",
type="cairo",
units="in",
width = 4,
height=4,
pointsize=10,
res=160)
par(mfrow = c(2,2),
mar = c(2,1,1,2),
oma = c(2,3,1,0))
for(i in 1:ntypes){
melt_elect <- melt(elect_results[[i]][, 5:7])
plot(NA,
ylim = c(-1,1),
xlim = c(.7, 3.3),
xaxt = "n")
pvals <- results_boots[[i]][2, ]
abline(h = 0)
vioplot(elect_means[[i]][[5]], add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[6]], at = 2, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[7]], at = 3, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
points(melt_elect$value ~ I(as.numeric(melt_elect$variable)+ runif(nrow(melt_elect), -.1, .1 )),
pch = 21,
bg = "grey")
means <- aggregate(melt_elect$value, by = list(melt_elect$variable), FUN = function(x){mean(x, na.rm = TRUE)})
segments(x0 = c(0.9, 1.9, 2.9), y0 = means$x, x1 = c(1.1, 2.1, 3.1), lwd = 3)
# segments(x0 = 1, x1 = 2, y0 = melt_elect[melt_elect$variable == "Dead", "value"],
#          y1 = melt_elect[melt_elect$variable == "Live", "value"])
#
# segments(x0 = 2, x1 = 3, y0 = melt_elect[melt_elect$variable == "Live", "value"],
#          y1 = melt_elect[melt_elect$variable == "Inter", "value"])
if(i %in% c(1,2)){
axis(1, at = c(1,2,3), labels = FALSE)
}
if(i %in% c(3,4)){
axis(1, at = c(1,2,3), labels =  c("D-L", "D-I", "L-I"))
}
# text(x = c(1,2,3), y = 0.9, labels = pvals[4:6])
mtext(text = types[i], outer = FALSE, side = 3, line = 0.3)
mtext(text = paste0("(", letters[i], ")"), outer = FALSE, side = 3, at = 0.5, line = 0.3)
mtext(text = "Relative Interaction Index", outer = TRUE, side = 2, line = 1.5)
}
dev.off()
?line
?lines
png(filename="./outputs/electivity_rii.png",
type="cairo",
units="in",
width = 4,
height=4,
pointsize=10,
res=160)
par(mfrow = c(2,2),
mar = c(2,1,1,2),
oma = c(2,3,1,0))
for(i in 1:ntypes){
melt_elect <- melt(elect_results[[i]][, 5:7])
plot(NA,
ylim = c(-1,1),
xlim = c(.7, 3.3),
xaxt = "n")
pvals <- results_boots[[i]][2, ]
abline(h = 0)
vioplot(elect_means[[i]][[5]], add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[6]], at = 2, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[7]], at = 3, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
points(melt_elect$value ~ I(as.numeric(melt_elect$variable)+ runif(nrow(melt_elect), -.1, .1 )),
pch = 21,
bg = "grey")
means <- aggregate(melt_elect$value, by = list(melt_elect$variable), FUN = function(x){mean(x, na.rm = TRUE)})
segments(x0 = c(0.85, 1.85, 2.85), y0 = means$x, x1 = c(1.15, 2.15, 3.15), lwd = 3)
# segments(x0 = 1, x1 = 2, y0 = melt_elect[melt_elect$variable == "Dead", "value"],
#          y1 = melt_elect[melt_elect$variable == "Live", "value"])
#
# segments(x0 = 2, x1 = 3, y0 = melt_elect[melt_elect$variable == "Live", "value"],
#          y1 = melt_elect[melt_elect$variable == "Inter", "value"])
if(i %in% c(1,2)){
axis(1, at = c(1,2,3), labels = FALSE)
}
if(i %in% c(3,4)){
axis(1, at = c(1,2,3), labels =  c("D-L", "D-I", "L-I"))
}
# text(x = c(1,2,3), y = 0.9, labels = pvals[4:6])
mtext(text = types[i], outer = FALSE, side = 3, line = 0.3)
mtext(text = paste0("(", letters[i], ")"), outer = FALSE, side = 3, at = 0.5, line = 0.3)
mtext(text = "Relative Interaction Index", outer = TRUE, side = 2, line = 1.5)
}
dev.off()
png(filename="./outputs/electivity_rii.png",
type="cairo",
units="in",
width = 4,
height=4,
pointsize=10,
res=160)
par(mfrow = c(2,2),
mar = c(2,1,1,2),
oma = c(2,3,1,0))
for(i in 1:ntypes){
melt_elect <- melt(elect_results[[i]][, 2:4])
plot(NA,
ylim = c(-1,1),
xlim = c(.7, 3.3),
xaxt = "n")
pvals <- results_boots[[i]][2, ]
abline(h = 0)
vioplot(elect_means[[i]][[2]], add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[3]], at = 2, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[4]], at = 3, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
points(melt_elect$value ~ I(as.numeric(melt_elect$variable)+ runif(nrow(melt_elect), -.1, .1 )),
pch = 21,
bg = "grey")
means <- aggregate(melt_elect$value, by = list(melt_elect$variable), FUN = function(x){mean(x, na.rm = TRUE)})
segments(x0 = c(0.85, 1.85, 2.85), y0 = means$x, x1 = c(1.15, 2.15, 3.15), lwd = 3)
# segments(x0 = 1, x1 = 2, y0 = melt_elect[melt_elect$variable == "Dead", "value"],
#          y1 = melt_elect[melt_elect$variable == "Live", "value"])
#
# segments(x0 = 2, x1 = 3, y0 = melt_elect[melt_elect$variable == "Live", "value"],
#          y1 = melt_elect[melt_elect$variable == "Inter", "value"])
if(i %in% c(1,2)){
axis(1, at = c(1,2,3), labels = FALSE)
}
if(i %in% c(3,4)){
axis(1, at = c(1,2,3), labels =  c("D-L", "D-I", "L-I"))
}
# text(x = c(1,2,3), y = 0.9, labels = pvals[4:6])
mtext(text = types[i], outer = FALSE, side = 3, line = 0.3)
mtext(text = paste0("(", letters[i], ")"), outer = FALSE, side = 3, at = 0.5, line = 0.3)
mtext(text = "Ivlev's E", outer = TRUE, side = 2, line = 1.5)
}
dev.off()
png(filename="./outputs/electivity_rii.png",
type="cairo",
units="in",
width = 4,
height=4,
pointsize=10,
res=160)
par(mfrow = c(2,2),
mar = c(2,1,1,2),
oma = c(2,3,1,0))
for(i in 1:ntypes){
melt_elect <- melt(elect_results[[i]][, 5:7])
plot(NA,
ylim = c(-1,1),
xlim = c(.7, 3.3),
xaxt = "n")
pvals <- results_boots[[i]][2, ]
abline(h = 0)
vioplot(elect_means[[i]][[5]], add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[6]], at = 2, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[7]], at = 3, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
points(melt_elect$value ~ I(as.numeric(melt_elect$variable)+ runif(nrow(melt_elect), -.1, .1 )),
pch = 21,
bg = "grey")
means <- aggregate(melt_elect$value, by = list(melt_elect$variable), FUN = function(x){mean(x, na.rm = TRUE)})
segments(x0 = c(0.85, 1.85, 2.85), y0 = means$x, x1 = c(1.15, 2.15, 3.15), lwd = 3)
# segments(x0 = 1, x1 = 2, y0 = melt_elect[melt_elect$variable == "Dead", "value"],
#          y1 = melt_elect[melt_elect$variable == "Live", "value"])
#
# segments(x0 = 2, x1 = 3, y0 = melt_elect[melt_elect$variable == "Live", "value"],
#          y1 = melt_elect[melt_elect$variable == "Inter", "value"])
if(i %in% c(1,2)){
axis(1, at = c(1,2,3), labels = FALSE)
}
if(i %in% c(3,4)){
axis(1, at = c(1,2,3), labels =  c("D-L", "D-I", "L-I"))
}
# text(x = c(1,2,3), y = 0.9, labels = pvals[4:6])
mtext(text = types[i], outer = FALSE, side = 3, line = 0.3)
mtext(text = paste0("(", letters[i], ")"), outer = FALSE, side = 3, at = 0.5, line = 0.3)
mtext(text = "Relative Interaction Index", outer = TRUE, side = 2, line = 1.5)
}
dev.off()
png(filename="./outputs/electivity.png",
type="cairo",
units="in",
width = 4,
height=4,
pointsize=10,
res=160)
par(mfrow = c(2,2),
mar = c(2,1,1,2),
oma = c(2,3,1,0))
for(i in 1:ntypes){
melt_elect <- melt(elect_results[[i]][, 2:4])
plot(NA,
ylim = c(-1,1),
xlim = c(.7, 3.3),
xaxt = "n")
pvals <- results_boots[[i]][2, ]
abline(h = 0)
vioplot(elect_means[[i]][[2]], add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[3]], at = 2, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[4]], at = 3, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
points(melt_elect$value ~ I(as.numeric(melt_elect$variable)+ runif(nrow(melt_elect), -.1, .1 )),
pch = 21,
bg = "grey")
means <- aggregate(melt_elect$value, by = list(melt_elect$variable), FUN = function(x){mean(x, na.rm = TRUE)})
segments(x0 = c(0.85, 1.85, 2.85), y0 = means$x, x1 = c(1.15, 2.15, 3.15), lwd = 3)
# segments(x0 = 1, x1 = 2, y0 = melt_elect[melt_elect$variable == "Dead", "value"],
#          y1 = melt_elect[melt_elect$variable == "Live", "value"])
#
# segments(x0 = 2, x1 = 3, y0 = melt_elect[melt_elect$variable == "Live", "value"],
#          y1 = melt_elect[melt_elect$variable == "Inter", "value"])
if(i %in% c(1,2)){
axis(1, at = c(1,2,3), labels = FALSE)
}
if(i %in% c(3,4)){
axis(1, at = c(1,2,3), labels =  c("D-L", "D-I", "L-I"))
}
# text(x = c(1,2,3), y = 0.9, labels = pvals[4:6])
mtext(text = types[i], outer = FALSE, side = 3, line = 0.3)
mtext(text = paste0("(", letters[i], ")"), outer = FALSE, side = 3, at = 0.5, line = 0.3)
mtext(text = "Ivlev's E", outer = TRUE, side = 2, line = 1.5)
}
dev.off()
png(filename="./outputs/electivity.png",
type="cairo",
units="in",
width = 4,
height=4,
pointsize=10,
res=160)
par(mfrow = c(2,2),
mar = c(2,1,1,2),
oma = c(2,3,1,0))
for(i in 1:ntypes){
melt_elect <- melt(elect_results[[i]][, 2:4])
plot(NA,
ylim = c(-1,1),
xlim = c(.7, 3.3),
xaxt = "n")
pvals <- results_boots[[i]][2, ]
abline(h = 0)
vioplot(elect_means[[i]][[2]], add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[3]], at = 2, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[4]], at = 3, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
points(melt_elect$value ~ I(as.numeric(melt_elect$variable)+ runif(nrow(melt_elect), -.1, .1 )),
pch = 21,
bg = "grey")
means <- aggregate(melt_elect$value, by = list(melt_elect$variable), FUN = function(x){mean(x, na.rm = TRUE)})
segments(x0 = c(0.85, 1.85, 2.85), y0 = means$x, x1 = c(1.15, 2.15, 3.15), lwd = 3)
# segments(x0 = 1, x1 = 2, y0 = melt_elect[melt_elect$variable == "Dead", "value"],
#          y1 = melt_elect[melt_elect$variable == "Live", "value"])
#
# segments(x0 = 2, x1 = 3, y0 = melt_elect[melt_elect$variable == "Live", "value"],
#          y1 = melt_elect[melt_elect$variable == "Inter", "value"])
if(i %in% c(1,2)){
axis(1, at = c(1,2,3), labels = FALSE)
}
if(i %in% c(3,4)){
axis(1, at = c(1,2,3), labels =  c("Dead", "Live", "Inter"))
}
# text(x = c(1,2,3), y = 0.9, labels = pvals[4:6])
mtext(text = types[i], outer = FALSE, side = 3, line = 0.3)
mtext(text = paste0("(", letters[i], ")"), outer = FALSE, side = 3, at = 0.5, line = 0.3)
mtext(text = "Ivlev's E", outer = TRUE, side = 2, line = 1.5)
}
dev.off()
results_boots
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- matrix(nrow = 12, ncol = 6)
summary
results_boots[[i]][[j]]
i <- 1
j <- 1
results_boots[[i]][[j]]
results_boots[[i]][[j]][[1]]
i <- 2
results_boots[[i]][[j]][[1]]
elect_means[[i]][[2]]
str(elect_means)
i <- 1
j <- 2
results_boots[[i]][[j]][[1]]
results_boots
mean(elect_means[[i]][[j + 1]]
)
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- matrix(nrow = 12, ncol = 6)
for(i in 1:4){
for(j in 1:6){
summary[3*i - 2, j] <- results_boots[[i]][[j]][[1]]
summary[3*i - 1, j] <- results_boots[[i]][[j]][[1]] - mean(elect_means[[i]][[j + 1]])
summary[3*i, j] <- results_boots[[i]][[j]][[2]]
}
}
summary
results_boots
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- matrix(nrow = 12, ncol = 7)
for(i in 1:4){
for(j in 1:6){
summary[3*i - 2, j+1] <- results_boots[[i]][[j]][[1]]
summary[3*i - 1, j+1] <- results_boots[[i]][[j]][[1]] - mean(elect_means[[i]][[j + 1]])
summary[3*i, j+1] <- results_boots[[i]][[j]][[2]]
}
}
summary[, 1] <- rep("Empirical", "Difference", "p-val", times = 4)
summary
summary[, 1] <- rep(c("Empirical", "Difference", "p-val"), times = 4)
summary
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- matrix(nrow = 12, ncol = 7)
for(i in 1:4){
for(j in 1:6){
summary[3*i - 2, j+1] <- results_boots[[i]][[j]][[1]]
summary[3*i - 1, j+1] <- results_boots[[i]][[j]][[1]] - mean(elect_means[[i]][[j + 1]])
summary[3*i, j+1] <- results_boots[[i]][[j]][[2]]
}
}
summary[, 1] <- rep(c("Empirical", "Difference", "p-val"), times = 4)
summary
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- data.frame(nrow = 12, ncol = 7)
for(i in 1:4){
for(j in 1:6){
summary[3*i - 2, j+1] <- results_boots[[i]][[j]][[1]]
summary[3*i - 1, j+1] <- results_boots[[i]][[j]][[1]] - mean(elect_means[[i]][[j + 1]])
summary[3*i, j+1] <- results_boots[[i]][[j]][[2]]
}
}
summary[, 1] <- rep(c("Empirical", "Difference", "p-val"), times = 4)
summary
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- data.frame())
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- data.frame()
for(i in 1:4){
for(j in 1:6){
summary[3*i - 2, j+1] <- results_boots[[i]][[j]][[1]]
summary[3*i - 1, j+1] <- results_boots[[i]][[j]][[1]] - mean(elect_means[[i]][[j + 1]])
summary[3*i, j+1] <- results_boots[[i]][[j]][[2]]
}
}
summary[, 1] <- rep(c("Empirical", "Difference", "p-val"), times = 4)
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- as.data.frame(matrix(nrow = 12, ncol = 7))
for(i in 1:4){
for(j in 1:6){
summary[3*i - 2, j+1] <- results_boots[[i]][[j]][[1]]
summary[3*i - 1, j+1] <- results_boots[[i]][[j]][[1]] - mean(elect_means[[i]][[j + 1]])
summary[3*i, j+1] <- results_boots[[i]][[j]][[2]]
}
}
summary[, 1] <- rep(c("Empirical", "Difference", "p-val"), times = 4)
summary
rownames(summary) <- rep(c("Perennial grass", "Cheatgrass", "Perennial forb", "Shrub"), each = 3)
rep(c("Perennial grass", "Cheatgrass", "Perennial forb", "Shrub"), each = 3)
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- as.data.frame(matrix(nrow = 12, ncol = 8))
for(i in 1:4){
for(j in 1:6){
summary[3*i - 2, j+2] <- results_boots[[i]][[j]][[1]]
summary[3*i - 1, j+2] <- results_boots[[i]][[j]][[1]] - mean(elect_means[[i]][[j + 1]])
summary[3*i, j+2] <- results_boots[[i]][[j]][[2]]
}
}
summary[, 2] <- rep(c("Empirical", "Difference", "p-val"), times = 4)
summary[, 1] <- rep(c("Perennial grass", "Cheatgrass", "Perennial forb", "Shrub"), each = 3)
summary
write.csv(summary, "./outputs/electivity summary table.csv")
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- as.data.frame(matrix(nrow = 12, ncol = 8))
for(i in 1:4){
for(j in 1:6){
summary[3*i - 2, j+2] <- results_boots[[i]][[j]][[1]]
summary[3*i - 1, j+2] <- results_boots[[i]][[j]][[1]] - mean(elect_means[[i]][[j + 1]])
summary[3*i, j+2] <- results_boots[[i]][[j]][[2]]
}
}
summary[, 2] <- rep(c("Empirical", "Difference", "p-val"), times = 4)
summary[, 1] <- rep(c("Perennial grass", "Cheatgrass", "Perennial forb", "Shrub"), each = 3)
write.csv(summary, "./outputs/electivity summary table.csv")
names(summary) <- c("FT", "var", "Dead", "Live", "Inter", "D-L", "D-I", "L-I")
write.csv(summary, "./outputs/electivity summary table.csv")
#-----------------------------------------------------------------------------------------------
# Summary table
#-----------------------------------------------------------------------------------------------
summary <- as.data.frame(matrix(nrow = 12, ncol = 8))
for(i in 1:4){
for(j in 1:6){
summary[3*i - 2, j+2] <- results_boots[[i]][[j]][[1]]
summary[3*i - 1, j+2] <- results_boots[[i]][[j]][[1]] - mean(elect_means[[i]][[j + 1]])
summary[3*i, j+2] <- results_boots[[i]][[j]][[2]]
}
}
summary[, 2] <- rep(c("Empirical", "Difference", "p-val"), times = 4)
summary[, 1] <- rep(c("Perennial grass", "Cheatgrass", "Perennial forb", "Shrub"), each = 3)
names(summary) <- c("FT", "var", "Dead", "Live", "Inter", "D-L", "D-I", "L-I")
write.csv(summary, "./outputs/electivity summary table.csv")
png(filename="./outputs/electivity.png",
type="cairo",
units="in",
width = 4,
height=4,
pointsize=10,
res=600)
par(mfrow = c(2,2),
mar = c(2,1,1,2),
oma = c(2,3,1,0))
for(i in 1:ntypes){
melt_elect <- melt(elect_results[[i]][, 2:4])
plot(NA,
ylim = c(-1,1),
xlim = c(.7, 3.3),
xaxt = "n")
pvals <- results_boots[[i]][2, ]
abline(h = 0)
vioplot(elect_means[[i]][[2]], add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[3]], at = 2, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
vioplot(elect_means[[i]][[4]], at = 3, add = TRUE, col = addTrans("blue", 30), drawRect = FALSE)
points(melt_elect$value ~ I(as.numeric(melt_elect$variable)+ runif(nrow(melt_elect), -.1, .1 )),
pch = 21,
bg = "grey")
means <- aggregate(melt_elect$value, by = list(melt_elect$variable), FUN = function(x){mean(x, na.rm = TRUE)})
segments(x0 = c(0.85, 1.85, 2.85), y0 = means$x, x1 = c(1.15, 2.15, 3.15), lwd = 3)
# segments(x0 = 1, x1 = 2, y0 = melt_elect[melt_elect$variable == "Dead", "value"],
#          y1 = melt_elect[melt_elect$variable == "Live", "value"])
#
# segments(x0 = 2, x1 = 3, y0 = melt_elect[melt_elect$variable == "Live", "value"],
#          y1 = melt_elect[melt_elect$variable == "Inter", "value"])
if(i %in% c(1,2)){
axis(1, at = c(1,2,3), labels = FALSE)
}
if(i %in% c(3,4)){
axis(1, at = c(1,2,3), labels =  c("Dead", "Live", "Inter"))
}
# text(x = c(1,2,3), y = 0.9, labels = pvals[4:6])
mtext(text = types[i], outer = FALSE, side = 3, line = 0.3)
mtext(text = paste0("(", letters[i], ")"), outer = FALSE, side = 3, at = 0.5, line = 0.3)
mtext(text = "Ivlev's E", outer = TRUE, side = 2, line = 1.5)
}
dev.off()
